name: Main

on:
  push:
    branches:
      - main
    tags:
      - '**'
    paths-ignore:
      - docs/**
      - README.rst
      - LICENSE.md
      - publishing.md
  pull_request:

jobs:
  lint-and_format:
    name: Run linter and formatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        with:
          version: "22.10"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt
      - name: "Flake 8"
        run: flake8 .
      - name: "Check release for pypi"
        run: |
          python -m build
          python -m twine check dist/*

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["3.7", "3.8", "3.9", "3.10"]
        folder: ["test", "mock_tests"]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.version }}
        cache: 'pip' # caching pip dependencies
    - run: pip install -r requirements.txt
    - name: Run unittests
      run: pytest --cov -v --cov-report=term-missing --cov=weaviate --cov-report xml:coverage.xml ${{ matrix.folder }}
    - name: Upload to codecov
      if: matrix.version == '3.10' && (github.ref_name != 'master')
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
        files: coverage.xml
        flags: unittests

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.version }}
          cache: 'pip' # caching pip dependencies
      - run: |
          pip install -r requirements.txt
          pip install .
      - name: Run integration tests
        env:
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          OKTA_CLIENT_SECRET: ${{ secrets.OKTA_CLIENT_SECRET }}
          WCS_DUMMY_CI_PW: ${{ secrets.WCS_DUMMY_CI_PW }}
          OKTA_DUMMY_CI_PW: ${{ secrets.OKTA_DUMMY_CI_PW }}
        run: |
          /bin/bash ci/start_weaviate.sh
          pytest -v --cov --cov-report=term-missing --cov=weaviate --cov-report xml:coverage.xml integration
      - name: Upload to codecov
        if: matrix.version == '3.10' && (github.ref_name != 'master')
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          files: coverage.xml
          flags: unittests

  build-and-add-artifact-and-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI
    needs: [integration-tests, unit-tests, lint-and_format]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Build a binary wheel
        run: python -m build
      - name: Create Wheel Artifacts
        uses: actions/upload-artifact@v3
        with:
          path: "dist/*.whl"
          retention-days: 7
      - name: Publish distribution üì¶ to PyPI on new tags
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          password: ${{ secrets.PYPI_API_TOKEN }}

  gh-release:
    name: Create a GitHub Release on new tags
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: [integration-tests, unit-tests, lint-and_format, build-and-add-artifact-and-publish]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download build artifact to append to release
        uses: actions/download-artifact@v3
        with:
          path: "dist/*.whl"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          draft: true
          files: dist/weaviate_client-3.10.0b0-py3-none-any.whl